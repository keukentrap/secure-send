# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  test:
    name: Compile code, run tests and do code analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build -v ./...  
      
    - name: Check format
      run: gofmt -d .
      
    - name: Static Analysis
      run: go install honnef.co/go/tools/cmd/staticcheck@latest && staticcheck .

    - name: Test
      run: go test -v ./...

  docker:
    needs: test
    runs-on: ubuntu-latest
    name: Docker Build, Tag, Push
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
    - name: Build container image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    name: Deploy to production
    
    steps:
      - name: Deploy to Production
        run: |
          printf "${SSH_KEY}" > .id_ed25519 && \
          ssh -i .id_ed25519 ${HOST} deploy.sh
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          HOST: kotter.wmulder.nl
